// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/quakeLog/usecase.go

// Package quakelog is a generated GoMock package.
package quakelog

import (
	entity "quakelog/internal/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockQuakeLogUsecase is a mock of QuakeLogUsecase interface.
type MockQuakeLogUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockQuakeLogUsecaseMockRecorder
}

// MockQuakeLogUsecaseMockRecorder is the mock recorder for MockQuakeLogUsecase.
type MockQuakeLogUsecaseMockRecorder struct {
	mock *MockQuakeLogUsecase
}

// NewMockQuakeLogUsecase creates a new mock instance.
func NewMockQuakeLogUsecase(ctrl *gomock.Controller) *MockQuakeLogUsecase {
	mock := &MockQuakeLogUsecase{ctrl: ctrl}
	mock.recorder = &MockQuakeLogUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQuakeLogUsecase) EXPECT() *MockQuakeLogUsecaseMockRecorder {
	return m.recorder
}

// GroupByGame mocks base method.
func (m *MockQuakeLogUsecase) GroupByGame() (map[string]entity.QuakeLog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GroupByGame")
	ret0, _ := ret[0].(map[string]entity.QuakeLog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GroupByGame indicates an expected call of GroupByGame.
func (mr *MockQuakeLogUsecaseMockRecorder) GroupByGame() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GroupByGame", reflect.TypeOf((*MockQuakeLogUsecase)(nil).GroupByGame))
}

// GroupedByTypeOfDeath mocks base method.
func (m *MockQuakeLogUsecase) GroupedByTypeOfDeath() (map[string]entity.QuakeLogKills, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GroupedByTypeOfDeath")
	ret0, _ := ret[0].(map[string]entity.QuakeLogKills)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GroupedByTypeOfDeath indicates an expected call of GroupedByTypeOfDeath.
func (mr *MockQuakeLogUsecaseMockRecorder) GroupedByTypeOfDeath() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GroupedByTypeOfDeath", reflect.TypeOf((*MockQuakeLogUsecase)(nil).GroupedByTypeOfDeath))
}
